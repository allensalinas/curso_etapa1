var dbPromise=idb.open("allenbd-entrega3-sinc1",2,function(e){switch(e.oldVersion){case 0:e.createObjectStore("restaurants"),e.createObjectStore("reviews");case 1:e.transaction.objectStore("reviews").createIndex("pending","pending"),e.transaction.objectStore("restaurants").createIndex("pendingfavorite","pendingfavorite")}});function crearRestaurante(e){dbPromise.then(function(t){var n=t.transaction("restaurants","readwrite");return n.objectStore("restaurants").put(e,e.id),n.complete})}function crearReview(e){console.log("creando review..."+e),dbPromise.then(function(t){var n=t.transaction("reviews","readwrite");return n.objectStore("reviews").put(e,e.id),n.complete})}function cargarRestaurantes(){return dbPromise.then(function(e){return e.transaction("restaurants").objectStore("restaurants").getAll()}).then(function(e){return e})}function cargarReviews(){return dbPromise.then(function(e){return e.transaction("reviews").objectStore("reviews").getAll()}).then(function(e){return e})}function cargarReviewsPendientes(){return dbPromise.then(function(e){return e.transaction("reviews").objectStore("reviews").index("pending").getAll("true")}).then(function(e){return console.log("Reviews pendientes:",e),e})}function cargarPendientesFavorito(){return dbPromise.then(function(e){return e.transaction("restaurants").objectStore("restaurants").index("pendingfavorite").getAll("true")}).then(function(e){return console.log("restaurantes pendientes:",e),e})}function updatePendingReview(e){console.log("tratando de actualizar el review: "+e.id),dbPromise.then(function(t){var n=t.transaction("reviews","readwrite");return n.objectStore("reviews").put(e,e.id),n.complete}).then(function(){console.log("item updated!")})}function updateFavorite(e){console.log("tratando de actualizar el restaurante: "+e.id),dbPromise.then(function(t){var n=t.transaction("restaurants","readwrite");return n.objectStore("restaurants").put(e,e.id),n.complete}).then(function(){console.log("restaurante actualizado!")})}